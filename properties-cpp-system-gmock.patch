diff -up properties-cpp/cmake/FindGtest.cmake.1~ properties-cpp/cmake/FindGtest.cmake
--- properties-cpp/cmake/FindGtest.cmake.1~	2017-05-02 22:04:50.000000000 +0200
+++ properties-cpp/cmake/FindGtest.cmake	2020-09-05 05:53:34.985805456 +0200
@@ -7,8 +7,8 @@ find_path(GTEST_INCLUDE_DIR gtest/gtest.
             HINTS ${GTEST_INSTALL_DIR})
 
 #gmock
-find_path(GMOCK_INSTALL_DIR gmock/CMakeLists.txt
-          HINTS /usr/src)
+find_path(GMOCK_INSTALL_DIR src/gmock-all.cc
+          HINTS /usr/src/googletest/googlemock)
 if(${GMOCK_INSTALL_DIR} STREQUAL "GMOCK_INSTALL_DIR-NOTFOUND")
     message(FATAL_ERROR "google-mock package not found")
 endif()
@@ -26,25 +26,11 @@ if (${MIR_IS_CROSS_COMPILING})
         -DCMAKE_TOOLCHAIN_FILE=${CMAKE_MODULE_PATH}/LinuxCrossCompile.cmake)
 endif()
 
-ExternalProject_Add(
-    GMock
-    #where to build in source tree
-    PREFIX ${GMOCK_PREFIX}
-    #where the source is external to the project
-    SOURCE_DIR ${GMOCK_INSTALL_DIR}
-    #forward the compilers to the subproject so cross-arch builds work
-    CMAKE_ARGS ${GTEST_CMAKE_ARGS}
-    BINARY_DIR ${GMOCK_BINARY_DIR}
-
-    #we don't need to install, so skip
-    INSTALL_COMMAND ""
-)
-
-set(GMOCK_LIBRARY ${GMOCK_BINARY_DIR}/libgmock.a)
-set(GMOCK_MAIN_LIBRARY ${GMOCK_BINARY_DIR}/libgmock_main.a)
+set(GMOCK_LIBRARY -lgmock)
+set(GMOCK_MAIN_LIBRARY -lgmock_main)
 set(GMOCK_BOTH_LIBRARIES ${GMOCK_LIBRARY} ${GMOCK_MAIN_LIBRARY})
-set(GTEST_LIBRARY ${GTEST_BINARY_DIR}/libgtest.a)
-set(GTEST_MAIN_LIBRARY ${GTEST_BINARY_DIR}/libgtest_main.a)
+set(GTEST_LIBRARY -lgtest)
+set(GTEST_MAIN_LIBRARY -lgtest_main)
 set(GTEST_BOTH_LIBRARIES ${GTEST_LIBRARY} ${GTEST_MAIN_LIBRARY})
 set(GTEST_ALL_LIBRARIES ${GTEST_BOTH_LIBRARIES} ${GMOCK_BOTH_LIBRARIES})
 
